#!/usr/bin/env node
"use strict";

var path = require('path')
  , fs = require('fs');

var Configuration = require('../lib/configuration');

var opts = require("nomnom")
  .script('circumflex')
  .options({
    command: {
      position: 0,
      help: 'create | assets',
      required: true
    },
    conf: {
      position: 1,
      help: 'Circumflex configuration module (conf.js)'
    }
  })
  .parse();

function done(err) {
  if (err) {
    console.trace(err);
    process.exit(1);
  }
  process.exit(0);
}

switch(opts.command) {
  case 'assets':
  case 'generate-assets':
  case 'compile-assets':
    loadConf(function(err, conf) {
      if (err) return done(err);
      var compiler = require('../lib/assets-compiler');
      compiler.compile(conf, done);
    });
    break;
}

/**
 * Loads configuration module specified by `conf` parameter.
 *
 * @param cb
 */
function loadConf(cb) {
  var confPath = path.join(process.cwd(), opts.conf);
  fs.stat(confPath, function(err, stat) {
    if (err) return cb(err);
    if (!stat.isFile())
      return cb(new Error(opts.conf + ' is a directory.'));
    try {
      var conf = require(confPath);
      if (conf.constructor != Configuration)
        cb(new Error(opts.conf + ' must be a valid Circumflex Configuration instance.'));
      return cb(null, conf);
    } catch(e) {
      cb(e);
    }
  });
}

